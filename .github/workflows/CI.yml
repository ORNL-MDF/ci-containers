name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron:  '0 5 * * FRI'

permissions:
  contents: read
  packages: write

jobs:
  CI:
    strategy:
        matrix:
          config:
            - {dockerfile: 'ubuntu',   tag: 'latest'}
            - {dockerfile: 'ubuntu',   tag: 'rolling',  build_args: 'TAG=rolling'}
            - {dockerfile: 'ubuntu',   tag: 'devel',    build_args: 'TAG=devel',    continue-on-error: 'true'}
    continue-on-error: ${{ matrix.config.continue-on-error == 'true' }}
    env:
      docker-tag: ghcr.io/ornl-mdf/ci-containers/${{ matrix.config.dockerfile }}:${{ matrix.config.tag }}
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: github.repository_owner == 'ornl-mdf' && ( github.event_name == 'push' ||  github.event_name == 'schedule' )
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Convert build_args
        id: build_args
        run: |
          echo "args<<EOF" >> $GITHUB_OUTPUT
          echo ${{ matrix.config.build_args }} | sed 's/,/\n/g' >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Free disk space
        shell: bash
        run: |
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/dotnet
      - name: Build new image and load it for testing
        uses: docker/build-push-action@v5
        with:
          tags: ${{ env.docker-tag }}
          file: ${{ matrix.config.dockerfile }}
          build-args: ${{ steps.build_args.outputs.args }}
          pull: true
          push: false
          load: true
      - name: Checkout Thesis
        uses: actions/checkout@v4
        with:
          repository: ORNL-MDF/3DThesis
          ref: master
          path: thesis
      - name: Check updated image with Thesis build
        run: |
          docker run -t --rm -v ${{ github.workspace }}/thesis:/thesis -w /thesis ${{ env.docker-tag }} \
            sh -c \
              "cmake -B build && \
              cmake --build build --parallel 2"
      - name: Push the image into GitHub Container Registry
        uses: docker/build-push-action@v5
        if: ${{ github.repository_owner == 'ornl-mdf' && ( github.event_name == 'push' ||  github.event_name == 'schedule' ) }}
        with:
          tags: ${{ env.docker-tag }}
          file: ${{ matrix.config.dockerfile }}
          build-args: ${{ steps.build_args.outputs.args }}
          push: true
